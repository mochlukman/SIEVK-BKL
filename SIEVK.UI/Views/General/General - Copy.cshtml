
@{
    ViewBag.Title = ViewBag.Type;
}

<h2>@ViewBag.Message</h2>
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    @Styles.Render("~/Content/template/css")
</head>
<body>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", @name = "frmGeneral" }))
    {
        <div class="row">
            <div class="span12">

                <div class="widget-content">
                    <fieldset>

                        <label class="control-label" for="TahapanCombo">Tahapan</label>
                        <div class="controls-filter">
                            @Html.DropDownList("TahapanCombo", null, new { @class = "form-control input-sm span2" })
                        </div>

                        <label class="control-label" for="TahunAnggaranCombo">Tahun Anggaran</label>
                        <div class="controls-filter">
                            @Html.DropDownList("TahunAnggaranCombo", null, new { @class = "form-control input-sm span2" })
                        </div>

                        <div class="form-group">
                            <label class="control-label" for="TriwulanCombo">Tahun Anggaran</label>
                            <div class="controls-filter">
                                @Html.DropDownList("TriwulanCombo", null, new { @class = "form-control input-sm span2" })
                            </div>
                        </div>
                    </fieldset>
                </div>

            </div>
        </div>
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs pull-right">
                <li class="active"><a href="#penyerapananggaran" data-toggle="tab">Penyerapan Anggaran</a></li>
                <li><a href="#penyerapanfisik" data-toggle="tab">Penyerapan Fisik</a></li>
                <li class="pull-left header"></li>
            </ul>
        </div>
        <div class="row">
            <div class="span12">
                <div class="widget">
                    <div class="widget-content">
                        <div class="widget-header">
                            <i class="icon-list-alt"></i>
                            <h3>Dashboard - Grafik Penyerapan Anggaran</h3>
                        </div>
                        <div id="chartContent" class="widget-content">
                            <canvas id="myChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span12">
                <div class="widget">
                    <div class="widget-content">
                        <div class="widget-header">
                            <i class="icon-list-alt"></i>
                            <h3>Dashboard - Grafik Penyerapan Fisik</h3>
                        </div>
                        <div id="chartContent2" class="widget-content">
                            <canvas id="chart1"></canvas>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    }
    </body>
</html>

<script>
    var barchart = null;
    var myNewChart;

    $(function () {
        displayData2();
        displayData();
        
    });

    function displayData() {
        var _selectedval1 = $("#TriwulanCombo").find(':selected').val();
        var _selectedval2 = $("#TahunAnggaranCombo").find(':selected').val();
        var _selectedval3 = $("#TahapanCombo").find(':selected').val();
        displayChartBar('@Url.Content("~/")' + "Dashboard/GetDashboardPenyerapanFisikData", _selectedval1, _selectedval2, _selectedval3, "#chart1");
    };

    function displayChartBar(urldata, kdtriwulan, kdtahun, kdtahap, selector) {
        jQuery.post(
            urldata,
            {
                kdTriwulan: kdtriwulan,
                kdTahun: kdtahun,
                kdTahap: kdtahap
            }
            , function (data) {
                createChartBar(selector, data);
            }
        );
    }

    function SetColors(data) {
        var colors = []
        for (var i = 0; i < data.length; i++) {
            var color;
            if (data[i] <= 50) {
                color = "red";
            }
            else if ((data[i] > 50) & (data[i] <= 65)) {
                color = "yellow";
            }
            else if ((data[i] > 65) & (data[i] <= 75)) {
                color = "#1D5403";
            }
            else if ((data[i] > 75) & (data[i] <= 90)) {
                color = "#4AC80E";
            }
            else {
                color = "green";
            }

            colors[i] = color;
        }

        return colors
    }

    function createChartBar(selector, _data) {

        // Split timestamp and data into separate arrays
        var loclabels = [], locdata = []; loccolor = [];
        var i = 0;
        Object.keys(_data).forEach(function (entity) {
            loclabels.push(_data[entity].NMUNIT);
            locdata.push(parseFloat(_data[entity].REALISASI));
            loccolor[i] = '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6);
            i++;
        });

        var mydata = {
            datasets: [
                {
                    data: locdata,
                    backgroundColor: SetColors(locdata),
                    label: "SKPD Unit (%)",
                    barThickness: 15
                }
            ],
            labels: loclabels
        };

        var myoptions = {
            responsive: true,
            responsiveAnimationDuration: 1000,
            maintainAspectRatio: true,
            title: { display: true, text: 'GRAFIK PENYERAPAN FISIK' },
            //maintainAspectRatio: false, //untuk ukuran ar otomatis
            //aspectRatio: 2,
            scales: {
                xAxes: [{
                    gridLines: {
                        display: true,
                        color: "rgba(255,99,132,0.2)"
                    },
                    ticks: {
                        callback: function (value) {
                            return $.number(value, 2)
                        },
                        min: 0.00,
                        max: 100.00,
                        stepSize: 10.00
                    }
                }],
                yAxes: [{
                    stacked: true,
                    gridLines: {
                        display: false,
                        color: "rgba(255,99,132,0.2)"
                    }
                }]
            },
            tooltips: {
                callbacks: {
                    label: function (tooltipItem, chart) {
                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                        return datasetLabel + $.number(tooltipItem.xLabel, 2);
                        //return datasetLabel + ': Rp ' + $.number(tooltipItem.xLabel, 0);
                    }
                }
            },
            plugins: {
                datalabels: {
                    color: 'black',
                    display: function (context) {
                        return context.dataset.data[context.dataIndex] > 7;
                    },
                    font: {
                        weight: 'bold'
                    },
                    formatter: function (value, context) {
                        return $.number(value, 2) + ' %';
                    }
                },
            }
        };

        //var ctx = $(selector);
        var chartContent = document.getElementById('chartContent2');
        chartContent.innerHTML = '&nbsp;';
        $('#chartContent2').append('<canvas id="chart1" style="height:150vh; width:80vw"><canvas>');

        ctx = $(selector).get(0).getContext("2d");
        barchart = new Chart(ctx,
            {
                type: 'horizontalBar',
                data: mydata,
                options: myoptions
            });
    }

    function displayData2() {
        //if (myNewChart != null)
        //{
        //    myNewChart.destroy();
        //    myNewChart = null;
        //}
        
        $.ajax({
            type: "POST",  
            url: '@Url.Content("~/")' + "Dashboard/JSONGrafikPenyerapanAnggaran?kdTahap=" + $('#TahapanCombo').val() + "&kdTahun=" + $('#TahunAnggaranCombo').val() + "&kdTrwln=" + $('#TriwulanCombo').val(),
            contentType: "application/json; charset=utf-8",  
            dataType: "json",  
            //        data: { kdTahap: $('#TahapanCombo').val(), kdTahun: $('#TahunAnggaranCombo').val(), kdTrwln: $('#TriwulanCombo').val() },
                //data: { kdTahap: "21", kdTahun: "4", kdTrwln: "1" },
            //data: { "ItemRows": s },
            success: function (chData) {
                var aData = chData;  
                var aLabels = aData[0];  
                var aDatasets1 = aData[1];  
                var dataT = {  
                    labels: aLabels,  
                    datasets: [{  
                        label: "SKPD Unit (%)",  
                        data: aDatasets1,  
                        fill: false,
                        backgroundColor: SetColors(aDatasets1),//[getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex(), getRandomColorHex()],
                        borderColor: ["#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5"],
                        borderWidth: 1  
                    }]  
                };

                var chartContent = document.getElementById('chartContent');
                chartContent.innerHTML = '&nbsp;';
                $('#chartContent').append('<canvas id="myChart" style="height:150vh; width:80vw"><canvas>');
                var ctx = $("#myChart").get(0).getContext("2d");

                 myNewChart = new Chart(ctx, {  
                    type: 'horizontalBar',
                    data: dataT,  
                    options: {  
                        responsive: true,
                        maintainAspectRatio: true,
                        responsiveAnimationDuration: 1000,
                        title: { display: true, text: 'GRAFIK PENYERAPAN ANGGARAN' },  
                        legend: { position: 'top', display: true },  
                        scales: {
                            xAxes: [{ gridLines: { display: true }, display: true, scaleLabel: { display: false, labelString: '' }, ticks: { beginAtZero: true, callback: function(value, index, values){return value.toLocaleString('id');} } }],
                            yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' } }]
                        }
                        ,tooltips: {
                                callbacks: {
                                label: function(tooltipItems, data) {
                                        return "Data = " + data.datasets[0].data[tooltipItems.index].toLocaleString('id');
                                    }
                                }
                        },

                        /* Label auf Balken – Werte hinter balken*/
                        plugins: {
                            datalabels: {
                                color: 'black',
                                display: function (context, value) {
                                    return context.dataset.data[context.dataIndex] > 7;
                                },
                                font: {
                                    weight: 'bold'
                                },
                                formatter: function (value, context) {
                                    return $.number(value, 2) + ' %';
                                }
                            },
                        }/*Plugins ende*/
                    }  
                 });
             
            }  
        });  
    
    };

    $("#TriwulanCombo").change(function () {

        displayData();
        displayData2();
    });
    $("#TahunAnggaranCombo").change(function () {

        displayData();
        displayData2();
    });
    $("#TahapanCombo").change(function () {

        displayData();
        displayData2();
    });
</script>
